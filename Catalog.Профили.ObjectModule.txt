
Процедура ОбновитьРеквизиты() Экспорт
	
	МетаданныеМодуля = ПолучитьОбработкуПоТипуПрофиля()
							.Создать()
							.Метаданные();
	Для каждого Реквизит из МетаданныеМодуля.Реквизиты Цикл
		
		НайденнаяСтрока = РеквизитыПрофиля.Найти(Реквизит.Имя, "Реквизит");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыПрофиля.Добавить().Реквизит = Реквизит.Имя;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОбработкуПоТипуПрофиля()
	
	ИдентификаторПрофиля = ИдентификаторПеречисленияПоСсылке(ТипПрофиля);
	Возврат Обработки["ТипПрофиля_" + ИдентификаторПрофиля];
	
КонецФункции
Функция ИдентификаторПеречисленияПоСсылке(ЗначениеПеречисления) 
	
	ИмяПеречисления = ЗначениеПеречисления.Метаданные().Имя;
	ИндексЗначенияПеречисления = Перечисления[ИмяПеречисления].Индекс(ЗначениеПеречисления);
	Возврат Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;

КонецФункции


Процедура ВыполнитьТекущийСценарий() Экспорт
	
	ТекущийМодуль = ПолучитьОбработкуПоТипуПрофиля().Создать();
	ЗаполнитьТекущуюОбработкуИзПрофиля(ТекущийМодуль);
	ТекущийМодуль.ВыполнитьСценарий();
	
КонецПроцедуры

Процедура ЗаполнитьТекущуюОбработкуИзПрофиля(ТекущаяОбработка)
	
	// шапка
	СтруктураПараметров = Новый Структура;
	Для каждого Строка из РеквизитыПрофиля Цикл
		СтруктураПараметров.Вставить(Строка.Реквизит, Строка.ЗначениеРеквизита);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ТекущаяОбработка, СтруктураПараметров);
	
	// табличные части
	Для каждого ТабличнаяЧастьОбработки из ТекущаяОбработка.Метаданные().ТабличныеЧасти Цикл
		ИмяТЧ = ТабличнаяЧастьОбработки.Имя;
		Если Метаданные().ТабличныеЧасти.Найти(ИмяТЧ) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяОбработка[ИмяТЧ].Загрузить(ЭтотОбъект[ИмяТЧ].Выгрузить());
		
	КонецЦикла;
	
КонецПроцедуры

#Область _// Автотесты

Процедура ВыполнитьВКонтексте(Команда, Параметр) Экспорт
	
	Выполнить(Команда);
	
КонецПроцедуры
	
#КонецОбласти
