

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьДеревоМетаданных();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДеревоМетаданных

&НаКлиенте
Процедура ДеревоМетаданныхПометкаПриИзменении(Элемент)
	
	ИндексСтроки = Элементы.ДеревоМетаданных.ТекущаяСтрока;
	УстановитьФлажкиВПодчиненныхСтроках(ИндексСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СвернутьДерево(Команда)
	
	СвернутьРазвернутьВеткуДерева(Объект.ДеревоМетаданных, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(Команда)
	
	СвернутьРазвернутьВеткуДерева(Объект.ДеревоМетаданных, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуКонфигурации(Команда)
	
	МассивДействий = Новый Массив;
	МассивДействий.Добавить(Новый Структура("Действие,Описание","ПодготовитьРабочиеКаталоги", "Подготовка рабочих каталогов"));
	МассивДействий.Добавить(Новый Структура("Действие,Описание","ВыгрузитьФайлыКонфигурации", "Выгрузка файлов конфигурации"));
	МассивДействий.Добавить(Новый Структура("Действие,Описание","СкопироватьФайлыДляОбработки", "Копирование файлов для обработки"));
	МассивДействий.Добавить(Новый Структура("Действие,Описание","ПодставитьМеткиВФайлы", "Добавление меток в модули"));
	МассивДействий.Добавить(Новый Структура("Действие,Описание","ЗагрузитьФайлыКонфигурации", "Загрузка файлов конфигурации"));
	
	Для Каждого СтруктураДействия Из МассивДействий Цикл
		
		НачВремя = ТекущаяДата();
		
		ВыполнитьПроцедуруИзМодуляОбъекта(СтруктураДействия.Действие);
		
		ВремяВыполнения = ВычислитьВремяВыполнения(НачВремя);
		Сообщить("Выполнено за " + ВремяВыполнения + " : " + СтруктураДействия.Описание);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьМетаданныеИзЗамера(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОтметитьМетаданныеИзЗамераЗавершение", ЭтаФорма);
	ПоказатьВводСтроки(Оповещение, "", "Скопируйте первую колонку из замера производительности", , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьМетаданныеИзЗамераЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ОтметитьМетаданныеИзСтрокиНаСервере(Строка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьПроцедуруИзМодуляОбъекта(ИмяПроцедуры)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Выполнить("ОбработкаОбъект."+ИмяПроцедуры+"()");
	
КонецПроцедуры

&НаКлиенте
Функция ВычислитьВремяВыполнения(НачВремя)
	
	Время = ТекущаяДата() - НачВремя;
	
	СекундыДатой = Дата(1,1,1) + Время;
	Если Время < 60*60*24 Тогда
		КоличествоДнейСтрокой = "";
	Иначе
		КоличествоДнейСтрокой = Формат(Время / 60*60*24, "ЧДЦ=") + "д ";
	КонецЕсли;
	
	Если Время = 0 Тогда
		ВремяСтрокой = "0:00:00";
	Иначе
		ВремяСтрокой = Формат(СекундыДатой, "ДЛФ=T");
	КонецЕсли;
	
	Возврат КоличествоДнейСтрокой + ВремяСтрокой;
	
КонецФункции

Процедура УстановитьФлажкиВПодчиненныхСтроках(ИдентификаторСтроки)
	
	ТекущаяСтрока = Объект.ДеревоМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Для Каждого Строка Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
		
		Строка.Пометка = ТекущаяСтрока.Пометка;
		УстановитьФлажкиВПодчиненныхСтроках(Строка.ПолучитьИдентификатор());
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтметитьМетаданныеИзСтрокиНаСервере(Строка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОтметитьМетаданныеИзЗамера(Строка);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьВеткуДерева(СтрокаДерева, Свернуть)
	
	Для Каждого Строка Из СтрокаДерева.ПолучитьЭлементы() Цикл
		ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
		СвернутьРазвернутьВеткуДерева(Строка, Свернуть);
		
		Если Свернуть = Истина Тогда
			Элементы.ДеревоМетаданных.Свернуть(ИдентификаторСтроки);
		Иначе
			Элементы.ДеревоМетаданных.Развернуть(ИдентификаторСтроки);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти



